*dn-md-utils-ftplugin.txt*	For Vim version 7.4	Last change: 2017 July 24

Filetype plugin for markdown                         *dn-md-utils-ftplugin*
                                                     *dn-md-utils-contents*
1.  Overview          |dn-md-utils-overview|
2.  Dependencies      |dn-md-utils-dependencies|
3.  Metadata          |dn-md-utils-metadata|
4.  Images            |dn-md-utils-images|
5.  Output            |dn-md-utils-output|

=========================================================================
1. Overview                                          *dn-md-utils-overview*

An auxiliary filetype plugin for the markdown language.

Previously the plugin author used a personal plugin to provide markdown-
related functionality. That plugin was retired when the plugin author
switched to the |vim-pandoc| plugin and panzer framework
(https://github.com/msprev/panzer) for markdown support.

This plugin is intended to address any gaps in markdown support provided
by those tools. It currently provides support for a pandoc-compliant
yaml-metadata block at the top of a document (with links collected at the
bottom of a document) using panzer styles.

=========================================================================
2. Dependencies                                  *dn-md-utils-dependencies*


                                                         *dn-md-utils-help*
This ftplugin contributes to the |dn-utils-plugin| help system (see
|dn#util#help()| for details). In the help system navigate to:
vim -> markdown ftplugin.
                                    *dn-md-utils-pandoc* *dn-md-utils-panzer*
Pandoc is used to generate output. It is not provided by this ftplugin. 
This ftplugin depends on the |vim-pandoc| plugin and assumes panzer
(https://github.com/msprev/panzer) is installed and configured.

This plugin is designed for use with pandoc version 2.0. At the time of
writing this is the development branch of pandoc, while the production
version is 1.19. As the change in major version number suggests, the
interfaces of these two versions of pandoc are incompatible. Hence, this
plugin will not work with the current production version of pandoc.

The known incompatibilities between these versions that affect this
plugin are:

    feature         1.19 (production)   2.0 (development)~
    smart           option: --smart     extension: --from=markdown+smart
    latex engine    --latex-engine      --pdf-engine

=========================================================================
3. Metadata                                          *dn-md-utils-metadata*

Pandoc-flavoured markdown uses a yaml-style metadata block at the top of
the file to specify values used by pandoc for document processing. With
panzer (https://github.com/msprev/panzer) installed the metadata block
can also specify panzer-related values which, in turn, specify values
used by pandoc for document processing.

This ftplugin assumes the following default yaml-metadata block is used
at the top of documents:
>
    ---
    title:  "[][source]"
    author: "[][author]"
    date:   ""
    style:  [Standard, Latex12pt]  # panzer: 8-12,14,17,20pt; PaginateSections
    ---
<
The reference-style links are defined at the end of the document. The
default boilerplate for this is:
>
    [comment]: # (URLs)
    
       [author]: 
    
       [source]: 
<
                                             *dn#md_utils#addBoilerplate()*
                                     *dn-md-utils-command-MUAddBoilerplate*
                                                   *dn-md-utils-mapping-ab*
The default metadata block and reference link definitions are added to a
document by the function |dn#md_utils#addBoilerplate()|. This function adds
metadata boilerplate to the top of the document and reference link
boilerplate to the bottom of the document. It takes a single boolean
parameter indicating whether the function was called from |Insert-mode|.

The |dn#md_utils#addBoilerplate()| function can be called using the
`:MUAddBoilerplate` command. The function can also be called using the
mapping "<Leader>ab" from either |Insert-mode| or |Normal-mode|. The default
|mapleader| is a backslash.

                                          *dn#md_utils#panzerifyMetadata()*
                                  *dn-md-utils-command-MUPanzerifyMetadata*
                                                   *dn-md-utils-mapping-pm*
Previously created markdown files have yaml metadata blocks that do not
use panzer. Those metadata blocks can be "panzerified" using the
|dn#md_utils#panzerifyMetadata()| function. It takes a single boolean
parameter indicating whether the function was called from |Insert-mode|.

The |dn#md_utils#panzerifyMetadata()| function can be called using the
`:MUPanzerifyMetadata` command. The function can also be called using the
mapping "<Leader>pm" from either |Insert-mode| or |Normal-mode|. The default
|mapleader| is a backslash.

=========================================================================
4. Images                         *dn-md-utils-figures*  *dn-md-utils-images*

A helper function, mapping and command are provided to assist with adding
figures. They assume the images are defined using reference links with
optional attributes, and that all reference links are added to the end of
the document prefixed with three spaces. For example:

    See @fig:display and {@fig:packed}.

    ![Tuck boxes displayed][display]

    ![Tuck boxes packed away][packed]

    [comment]: # (URLs)

       [display]: resources/displayed.png "Tuck boxes displayed"
       {#fig:display .class width="50%"}

       [packed]: resources/packed.png "Tuck boxes packed away"
       {#fig:packed .class width="50%"} 

                                               *dn#md_utils#insertFigure()*
                                       *dn-md-utils-command-MUInsertFigure*
                                                  *dn-md-utils-mapping-fig*
A figure is inserted on the following line using the
|dn#md_utils#insertFigure()| function. It takes a single boolean parameter
indicating whether the function was called from |Insert-mode|.

The |dn#md_utils#insertFigure()| function can be called using the
`:MUInsertFigure` command. The function can also be called using the
mapping "<Leader>fig" from either |Insert-mode| or |Normal-mode|. The default
|mapleader| is a backslash.

=========================================================================
5. Output                                              *dn-md-utils-output* 

This plugin does not assist with generation of output, but does provide a
mapping and function for deleting output files. The term "clean" is used,
as in the makefile keyword that deletes all working and output files.

                              *dn-md-utils-clean*  *dn-md-utils-clean-output*
Cleaning of output only occurs if the current buffer contains a file. The
directory searched for items to delete is the directory in which the file
in the current buffer is located.

If the file being edited is FILE.ext, the files that will be deleted are:
"FILE.htm", "FILE.html", "FILE.pdf", "FILE.mobi", and "FILE.epub". The
subdirectory ".tmp" will also be recursively force deleted.

WARNING: This plugin does not check that it is safe to delete to files
and directories identified for deletion. For example, it does not check
whether any of them are symlinks to other locations. Also be aware that
directories are forcible and recursively deleted, as with the *nix shell
command "rm -fr".

                                                *dn#md_utils#cleanOutput()*
                                        *dn-md-utils-command-MUCleanOutput*
                                                   *dn-md-utils-mapping-co*
Output files and directories are deleted using the
|dn#md_utils#cleanOutput()| function. It takes a single boolean parameter
indicating whether the function was called from |Insert-mode|.

The |dn#md_utils#cleanOutput()| function can be called using the
`:MUCleanOutput` command. The function can also be called using the
mapping "<Leader>co" from either |Insert-mode| or |Normal-mode|. The default
|mapleader| is a backslash.

=========================================================================
 vim:tw=78:fo=tcq2:ts=4:ft=help:
